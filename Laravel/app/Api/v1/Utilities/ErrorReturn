/*400*/

return response()->json([
                'message' => 'Please mark unread messages before sending new messages!',
                'error_code' => ErrorCodeUtility::UNMARKED_MESSAGE,
                'status_code' => '400'
            ], 400);

return response()->json([
                    'message' => 'id is not integer',
                    'error_code' => ErrorCodeUtility::INPUT_ID_NOT_NUMERIC,
                    'status_code' => '400'
                ], 400);

return response()->json([
                    'message' => 'current client is not mobile',
                    'error_code' => ErrorCodeUtility::NOT_MOBILE,
                    'status_code' => '400'
                ], 400);

return response()->json([
                'message' => 'Bad request, you have already blocked the user!',
                'error_code' => ErrorCodeUtility::BLOCKED_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have already liked this pin!',
                'error_code' => ErrorCodeUtility::LIKED_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have not liked this pin yet!',
                'error_code' => ErrorCodeUtility::NOT_LIKED,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have already saved this pin in this collection!',
                'error_code' => ErrorCodeUtility::SAVED_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have not saved this pin in this collection yet!',
                'error_code' => ErrorCodeUtility::NOT_SAVED,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'wrong type, neither media nor comment',
                'error_code' => ErrorCodeUtility::WRONG_TYPE,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have already voted up!',
                'error_code' => ErrorCodeUtility::VOTED_UP_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have already voted down!',
                'error_code' => ErrorCodeUtility::VOTED_DOWN_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have not voted yet!',
                'error_code' => ErrorCodeUtility::NOT_VOTED,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have not voted yet!',
                'error_code' => ErrorCodeUtility::NOT_VOTED,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you can not block yourself!',
                'error_code' => ErrorCodeUtility::BLOCK_SELF,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you can not follow yourself!',
                'error_code' => ErrorCodeUtility::FOLLOW_SELF,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have already followed this user!',
                'error_code' => ErrorCodeUtility::FOLLOWED_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have not followed this user yet!',
                'error_code' => ErrorCodeUtility::NOT_FOLLOWED,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, you have already sent a request',
                'error_code' => ErrorCodeUtility::REQUESTED_ALREADY,
                'status_code' => '400'
            ], 400);

return response()->json([
                'message' => 'Bad request, can not send friend request to your friend',
                'error_code' => ErrorCodeUtility::FRIEND_ALREADY,
                'status_code' => '400'
            ], 400);

if(Friend_requests::where('user_id', $requested_user_id)->where('requested_user_id', $self_user_id)->exist()) {
            return response()->json([
                'message' => 'Bad request, this user has already sent you a friend request',
                'error_code' => ErrorCodeUtility::RESPONSE_BEFORE_SEND_A_REQUEST,
                'status_code' => '400'
            ], 400);
        }
if($self_user_id == $requested_user_id) {
            return response()->json([
                'message' => 'Bad request, you can not send friend request to yourself',
                'error_code' => ErrorCodeUtility::FRIEND_REQUEST_SELF,
                'status_code' => '400'
            ], 400);
        }



/*401*/
return response()->json([
                    'message' => 'incorrect password',
                    'error_code' => ErrorCodeUtility::INCORRECT_PASSWORD,
                    'status_code' => '401'
                ], 401);




/*403*/
return response()->json([
                    'message' => 'too far away',
                    'error_code' => ErrorCodeUtility::TOO_FAR_AWAY,
                    'status_code' => '403'
                ], 403);

return response()->json([
                    'message' => 'You can not update this chat room',
                    'error_code' => ErrorCodeUtility::NOT_OWNER_OF_PIN,
                    'status_code' => '403'
                ], 403);

return response()->json([
                    'message' => 'verification timeout',
                    'error_code' => ErrorCodeUtility::VERIFICATION_TIMEOUT,
                    'status_code' => '403'
                ], 403);
                
return response()->json([
                    'message' => 'verification code is wrong',
                    'error_code' => ErrorCodeUtility::VERIFICATION_WRONG_CODE,
                    'status_code' => '403'
                ], 403);

return response()->json([
                    'message' => 'You can not delete this collection',
                    'error_code' => ErrorCodeUtility::NOT_OWNER_OF_COLLECTION,
                    'status_code' => '403'
                ], 403);






/*404*/
return response()->json([
                    'message' => 'user not found',
                    'error_code' => ErrorCodeUtility::USER_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'chat not found',
                    'error_code' => ErrorCodeUtility::CHAT_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'last message sender not found',
                    'error_code' => ErrorCodeUtility::LAST_MESSAGE_SENDER_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'tag not found',
                    'error_code' => ErrorCodeUtility::TAG_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'file not found',
                    'error_code' => ErrorCodeUtility::FILE_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'chat room not found',
                    'error_code' => ErrorCodeUtility::CHAT_ROOM_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'chat room user not found',
                    'error_code' => ErrorCodeUtility::CHAT_ROOM_USER_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'session not found',
                    'error_code' => ErrorCodeUtility::SESSION_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'comment not found',
                    'error_code' => ErrorCodeUtility::COMMENT_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'media not found',
                    'error_code' => ErrorCodeUtility::MEDIA_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'geolocation not found',
                    'error_code' => ErrorCodeUtility::LOCATION_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'location not found',
                    'error_code' => ErrorCodeUtility::LOCATIONS_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'friend request not found',
                    'error_code' => ErrorCodeUtility::FRIEND_REQUEST_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'PIN not found',
                    'error_code' => ErrorCodeUtility::PIN_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'verification not found',
                    'error_code' => ErrorCodeUtility::VERIFICATION_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'name card not found',
                    'error_code' => ErrorCodeUtility::VERIFICATION_NOT_FOUND,
                    'status_code' => '404'
                ], 404);

return response()->json([
                    'message' => 'Collection not found',
                    'error_code' => ErrorCodeUtility::COLLECTION_NOT_FOUND,
                    'status_code' => '404'
                ], 404);





/*422*/
return response()->json([
                    'message' => 'user already exists',
                    'error_code' => ErrorCodeUtility::USER_ALREADY_EXISTS,
                    'status_code' => '422'
                ], 422);

return response()->json([
                    'message' => 'user name already exists',
                    'error_code' => ErrorCodeUtility::USER_NAME_ALREADY_EXISTS,
                    'status_code' => '422'
                ], 422);
return response()->json([
                    'message' => 'email already exists',
                    'error_code' => ErrorCodeUtility::EMAIL_ALREADY_EXISTS,
                    'status_code' => '422'
                ], 422);
return response()->json([
                    'message' => 'phone number already exists',
                    'error_code' => ErrorCodeUtility::PHONE_ALREADY_EXISTS,
                    'status_code' => '422'
                ], 422);

